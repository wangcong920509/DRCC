jdk_src\javax\swing\plaf\basic\BasicTabbedPaneUI.java
private void calculateBaseline(){
  int tabCount=tabPane.getTabCount();
  int tabPlacement=tabPane.getTabPlacement();
  maxTabHeight=calculateMaxTabHeight(tabPlacement);
  baseline=getBaseline(0);
  if (isHorizontalTabPlacement()) {
    for (int i=1; i < tabCount; i++) {
      if (getBaseline(i) != baseline) {
        baseline=-1;
        break;
      }
    }
  }
 else {
    FontMetrics fontMetrics=getFontMetrics();
    int fontHeight=fontMetrics.getHeight();
    int height=calculateTabHeight(tabPlacement,0,fontHeight);
    for (int i=1; i < tabCount; i++) {
      int newHeight=calculateTabHeight(tabPlacement,i,fontHeight);
      if (height != newHeight) {
        baseline=-1;
        break;
      }
    }
  }
}
protected void navigateSelectedTab(int direction){
  int tabPlacement=tabPane.getTabPlacement();
  int current=DefaultLookup.getBoolean(tabPane,this,"TabbedPane.selectionFollowsFocus",true) ? tabPane.getSelectedIndex() : getFocusIndex();
  int tabCount=tabPane.getTabCount();
  boolean leftToRight=BasicGraphicsUtils.isLeftToRight(tabPane);
  if (tabCount <= 0) {
    return;
  }
  int offset;
switch (tabPlacement) {
case LEFT:
case RIGHT:
switch (direction) {
case NEXT:
      selectNextTab(current);
    break;
case PREVIOUS:
  selectPreviousTab(current);
break;
case NORTH:
selectPreviousTabInRun(current);
break;
case SOUTH:
selectNextTabInRun(current);
break;
case WEST:
offset=getTabRunOffset(tabPlacement,tabCount,current,false);
selectAdjacentRunTab(tabPlacement,current,offset);
break;
case EAST:
offset=getTabRunOffset(tabPlacement,tabCount,current,true);
selectAdjacentRunTab(tabPlacement,current,offset);
break;
default :
}
break;
case BOTTOM:
case TOP:
default :
switch (direction) {
case NEXT:
selectNextTab(current);
break;
case PREVIOUS:
selectPreviousTab(current);
break;
case NORTH:
offset=getTabRunOffset(tabPlacement,tabCount,current,false);
selectAdjacentRunTab(tabPlacement,current,offset);
break;
case SOUTH:
offset=getTabRunOffset(tabPlacement,tabCount,current,true);
selectAdjacentRunTab(tabPlacement,current,offset);
break;
case EAST:
if (leftToRight) {
selectNextTabInRun(current);
}
 else {
selectPreviousTabInRun(current);
}
break;
case WEST:
if (leftToRight) {
selectPreviousTabInRun(current);
}
 else {
selectNextTabInRun(current);
}
break;
default :
}
}
}
-->
38.0 / 584 = 0.06506849315068493