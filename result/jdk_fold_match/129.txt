jdk_src\com\sun\org\apache\xml\internal\utils\FastStringBuffer.java
/** 
 * @param start Offset of first character in the range.
 * @param length Number of characters to send.
 * @return a new String object initialized from the specified range ofcharacters.
 */
public String getString(int start,int length){
  int startColumn=start & m_chunkMask;
  int startChunk=start >>> m_chunkBits;
  if (startColumn + length < m_chunkMask && m_innerFSB == null) {
    return getOneChunkString(startChunk,startColumn,length);
  }
  return getString(new StringBuffer(length),startChunk,startColumn,length).toString();
}
/** 
 * Sends the specified range of characters as one or more SAX characters() events. Note that the buffer reference passed to the ContentHandler may be invalidated if the FastStringBuffer is edited; it's the user's responsibility to manage access to the FastStringBuffer to prevent this problem from arising. <p> Note too that there is no promise that the output will be sent as a single call. As is always true in SAX, one logical string may be split across multiple blocks of memory and hence delivered as several successive events.
 * @param ch SAX ContentHandler object to receive the event.
 * @param start Offset of first character in the range.
 * @param length Number of characters to send.
 * @exception org.xml.sax.SAXException may be thrown by handler'scharacters() method.
 */
public void sendSAXcharacters(org.xml.sax.ContentHandler ch,int start,int length) throws org.xml.sax.SAXException {
  int startChunk=start >>> m_chunkBits;
  int startColumn=start & m_chunkMask;
  if (startColumn + length < m_chunkMask && m_innerFSB == null) {
    ch.characters(m_array[startChunk],startColumn,length);
    return;
  }
  int stop=start + length;
  int stopChunk=stop >>> m_chunkBits;
  int stopColumn=stop & m_chunkMask;
  for (int i=startChunk; i < stopChunk; ++i) {
    if (i == 0 && m_innerFSB != null)     m_innerFSB.sendSAXcharacters(ch,startColumn,m_chunkSize - startColumn);
 else     ch.characters(m_array[i],startColumn,m_chunkSize - startColumn);
    startColumn=0;
  }
  if (stopChunk == 0 && m_innerFSB != null)   m_innerFSB.sendSAXcharacters(ch,startColumn,stopColumn - startColumn);
 else   if (stopColumn > startColumn) {
    ch.characters(m_array[stopChunk],startColumn,stopColumn - startColumn);
  }
}
-->
21.0 / 531 = 0.03954802259887006