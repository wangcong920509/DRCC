jdk_src\java\util\BitSet.java
/** 
 * Sets the bit at the specified index to  {@code true}.
 * @param bitIndex a bit index
 * @throws IndexOutOfBoundsException if the specified index is negative
 * @since  JDK1.0
 */
public void set(int bitIndex){
  if (bitIndex < 0)   throw new IndexOutOfBoundsException("bitIndex < 0: " + bitIndex);
  int wordIndex=wordIndex(bitIndex);
  expandTo(wordIndex);
  words[wordIndex]|=(1L << bitIndex);
  checkInvariants();
}
/** 
 * Returns the value of the bit with the specified index. The value is  {@code true} if the bit with the index {@code bitIndex}is currently set in this  {@code BitSet}; otherwise, the result is  {@code false}.
 * @param bitIndex   the bit index
 * @return the value of the bit with the specified index
 * @throws IndexOutOfBoundsException if the specified index is negative
 */
public boolean get(int bitIndex){
  if (bitIndex < 0)   throw new IndexOutOfBoundsException("bitIndex < 0: " + bitIndex);
  checkInvariants();
  int wordIndex=wordIndex(bitIndex);
  return (wordIndex < wordsInUse) && ((words[wordIndex] & (1L << bitIndex)) != 0);
}
-->
48.0 / 201 = 0.23880597014925373