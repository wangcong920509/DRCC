jdk_src\com\sun\org\apache\xml\internal\serialize\XML11Serializer.java
protected final void printCDATAText(String text) throws IOException {
  int length=text.length();
  char ch;
  for (int index=0; index < length; ++index) {
    ch=text.charAt(index);
    if (ch == ']' && index + 2 < length && text.charAt(index + 1) == ']' && text.charAt(index + 2) == '>') {
      if (fDOMErrorHandler != null) {
        if ((features & DOMSerializerImpl.SPLITCDATA) == 0 && (features & DOMSerializerImpl.WELLFORMED) == 0) {
          String msg=DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"EndingCDATA",null);
          modifyDOMError(msg,DOMError.SEVERITY_FATAL_ERROR,null,fCurrentNode);
          boolean continueProcess=fDOMErrorHandler.handleError(fDOMError);
          if (!continueProcess) {
            throw new IOException();
          }
        }
 else {
          String msg=DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"SplittingCDATA",null);
          modifyDOMError(msg,DOMError.SEVERITY_WARNING,null,fCurrentNode);
          fDOMErrorHandler.handleError(fDOMError);
        }
      }
      _printer.printText("]]]]><![CDATA[>");
      index+=2;
      continue;
    }
    if (!XML11Char.isXML11Valid(ch)) {
      if (++index < length) {
        surrogates(ch,text.charAt(index));
      }
 else {
        fatalError("The character '" + (char)ch + "' is an invalid XML character");
      }
      continue;
    }
 else {
      if (_encodingInfo.isPrintable((char)ch) && XML11Char.isXML11ValidLiteral(ch)) {
        _printer.printText((char)ch);
      }
 else {
        _printer.printText("]]>&#x");
        _printer.printText(Integer.toHexString(ch));
        _printer.printText(";<![CDATA[");
      }
    }
  }
}
protected void printText(String text,boolean preserveSpace,boolean unescaped) throws IOException {
  int index;
  char ch;
  int length=text.length();
  if (preserveSpace) {
    for (index=0; index < length; ++index) {
      ch=text.charAt(index);
      if (!XML11Char.isXML11Valid(ch)) {
        if (++index < length) {
          surrogates(ch,text.charAt(index));
        }
 else {
          fatalError("The character '" + (char)ch + "' is an invalid XML character");
        }
        continue;
      }
      if (unescaped && XML11Char.isXML11ValidLiteral(ch)) {
        _printer.printText(ch);
      }
 else       printXMLChar(ch);
    }
  }
 else {
    for (index=0; index < length; ++index) {
      ch=text.charAt(index);
      if (!XML11Char.isXML11Valid(ch)) {
        if (++index < length) {
          surrogates(ch,text.charAt(index));
        }
 else {
          fatalError("The character '" + (char)ch + "' is an invalid XML character");
        }
        continue;
      }
      if (unescaped && XML11Char.isXML11ValidLiteral(ch))       _printer.printText(ch);
 else       printXMLChar(ch);
    }
  }
}
