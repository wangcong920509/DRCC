jdk_src\com\sun\org\apache\xml\internal\utils\QName.java
/** 
 * Construct a QName from a string, resolving the prefix using the given namespace stack. The default namespace is not resolved.
 * @param qname Qualified name to resolve
 * @param namespaces Namespace stack to use to resolve namespace
 * @param validate If true the new QName will be validated and an IllegalArgumentException willbe thrown if it is invalid.
 */
public QName(String qname,Stack namespaces,boolean validate){
  String namespace=null;
  String prefix=null;
  int indexOfNSSep=qname.indexOf(':');
  if (indexOfNSSep > 0) {
    prefix=qname.substring(0,indexOfNSSep);
    if (prefix.equals("xml")) {
      namespace=S_XMLNAMESPACEURI;
    }
 else     if (prefix.equals("xmlns")) {
      return;
    }
 else {
      int depth=namespaces.size();
      for (int i=depth - 1; i >= 0; i--) {
        NameSpace ns=(NameSpace)namespaces.elementAt(i);
        while (null != ns) {
          if ((null != ns.m_prefix) && prefix.equals(ns.m_prefix)) {
            namespace=ns.m_uri;
            i=-1;
            break;
          }
          ns=ns.m_next;
        }
      }
    }
    if (null == namespace) {
      throw new RuntimeException(XMLMessages.createXMLMessage(XMLErrorResources.ER_PREFIX_MUST_RESOLVE,new Object[]{prefix}));
    }
  }
  _localName=(indexOfNSSep < 0) ? qname : qname.substring(indexOfNSSep + 1);
  if (validate) {
    if ((_localName == null) || (!XML11Char.isXML11ValidNCName(_localName))) {
      throw new IllegalArgumentException(XMLMessages.createXMLMessage(XMLErrorResources.ER_ARG_LOCALNAME_INVALID,null));
    }
  }
  _namespaceURI=namespace;
  _prefix=prefix;
  m_hashCode=toString().hashCode();
}
/** 
 * Construct a QName from a string, resolving the prefix using the given namespace stack. The default namespace is not resolved.
 * @param qname Qualified name to resolve
 * @param resolver Prefix resolver for this context
 * @param validate If true the new QName will be validated and an IllegalArgumentException willbe thrown if it is invalid.
 */
public QName(String qname,PrefixResolver resolver,boolean validate){
  String prefix=null;
  _namespaceURI=null;
  int indexOfNSSep=qname.indexOf(':');
  if (indexOfNSSep > 0) {
    prefix=qname.substring(0,indexOfNSSep);
    if (prefix.equals("xml")) {
      _namespaceURI=S_XMLNAMESPACEURI;
    }
 else {
      _namespaceURI=resolver.getNamespaceForPrefix(prefix);
    }
    if (null == _namespaceURI) {
      throw new RuntimeException(XMLMessages.createXMLMessage(XMLErrorResources.ER_PREFIX_MUST_RESOLVE,new Object[]{prefix}));
    }
    _localName=qname.substring(indexOfNSSep + 1);
  }
 else   if (indexOfNSSep == 0) {
    throw new RuntimeException(XMLMessages.createXMLMessage(XMLErrorResources.ER_NAME_CANT_START_WITH_COLON,null));
  }
 else {
    _localName=qname;
  }
  if (validate) {
    if ((_localName == null) || (!XML11Char.isXML11ValidNCName(_localName))) {
      throw new IllegalArgumentException(XMLMessages.createXMLMessage(XMLErrorResources.ER_ARG_LOCALNAME_INVALID,null));
    }
  }
  m_hashCode=toString().hashCode();
  _prefix=prefix;
}
-->
334.0 / 1639 = 0.20378279438682123