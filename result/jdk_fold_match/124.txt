jdk_src\com\sun\org\apache\xml\internal\serialize\HTMLSerializer.java
public void startElement(String tagName,AttributeList attrs) throws SAXException {
  int i;
  boolean preserveSpace;
  ElementState state;
  String name;
  String value;
  try {
    if (_printer == null)     throw new IllegalStateException(DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"NoWriterSupplied",null));
    state=getElementState();
    if (isDocumentState()) {
      if (!_started)       startDocument(tagName);
    }
 else {
      if (state.empty)       _printer.printText('>');
      if (_indenting && !state.preserveSpace && (state.empty || state.afterElement))       _printer.breakLine();
    }
    preserveSpace=state.preserveSpace;
    _printer.printText('<');
    if (_xhtml)     _printer.printText(tagName.toLowerCase(Locale.ENGLISH));
 else     _printer.printText(tagName);
    _printer.indent();
    if (attrs != null) {
      for (i=0; i < attrs.getLength(); ++i) {
        _printer.printSpace();
        name=attrs.getName(i).toLowerCase(Locale.ENGLISH);
        value=attrs.getValue(i);
        if (_xhtml) {
          if (value == null) {
            _printer.printText(name);
            _printer.printText("=\"\"");
          }
 else {
            _printer.printText(name);
            _printer.printText("=\"");
            printEscaped(value);
            _printer.printText('"');
          }
        }
 else {
          if (value == null) {
            value="";
          }
          if (!_format.getPreserveEmptyAttributes() && value.length() == 0)           _printer.printText(name);
 else           if (HTMLdtd.isURI(tagName,name)) {
            _printer.printText(name);
            _printer.printText("=\"");
            _printer.printText(escapeURI(value));
            _printer.printText('"');
          }
 else           if (HTMLdtd.isBoolean(tagName,name))           _printer.printText(name);
 else {
            _printer.printText(name);
            _printer.printText("=\"");
            printEscaped(value);
            _printer.printText('"');
          }
        }
      }
    }
    if (HTMLdtd.isPreserveSpace(tagName))     preserveSpace=true;
    state=enterElementState(null,null,tagName,preserveSpace);
    if (tagName.equalsIgnoreCase("A") || tagName.equalsIgnoreCase("TD")) {
      state.empty=false;
      _printer.printText('>');
    }
    if (tagName.equalsIgnoreCase("SCRIPT") || tagName.equalsIgnoreCase("STYLE")) {
      if (_xhtml) {
        state.doCData=true;
      }
 else {
        state.unescaped=true;
      }
    }
  }
 catch (  IOException except) {
    throw new SAXException(except);
  }
}
/** 
 * Called to serialize a DOM element. Equivalent to calling  {@link #startElement},  {@link #endElement} and serializing everythinginbetween, but better optimized.
 */
protected void serializeElement(Element elem) throws IOException {
  Attr attr;
  NamedNodeMap attrMap;
  int i;
  Node child;
  ElementState state;
  boolean preserveSpace;
  String name;
  String value;
  String tagName;
  tagName=elem.getTagName();
  state=getElementState();
  if (isDocumentState()) {
    if (!_started)     startDocument(tagName);
  }
 else {
    if (state.empty)     _printer.printText('>');
    if (_indenting && !state.preserveSpace && (state.empty || state.afterElement))     _printer.breakLine();
  }
  preserveSpace=state.preserveSpace;
  _printer.printText('<');
  if (_xhtml)   _printer.printText(tagName.toLowerCase(Locale.ENGLISH));
 else   _printer.printText(tagName);
  _printer.indent();
  attrMap=elem.getAttributes();
  if (attrMap != null) {
    for (i=0; i < attrMap.getLength(); ++i) {
      attr=(Attr)attrMap.item(i);
      name=attr.getName().toLowerCase(Locale.ENGLISH);
      value=attr.getValue();
      if (attr.getSpecified()) {
        _printer.printSpace();
        if (_xhtml) {
          if (value == null) {
            _printer.printText(name);
            _printer.printText("=\"\"");
          }
 else {
            _printer.printText(name);
            _printer.printText("=\"");
            printEscaped(value);
            _printer.printText('"');
          }
        }
 else {
          if (value == null) {
            value="";
          }
          if (!_format.getPreserveEmptyAttributes() && value.length() == 0)           _printer.printText(name);
 else           if (HTMLdtd.isURI(tagName,name)) {
            _printer.printText(name);
            _printer.printText("=\"");
            _printer.printText(escapeURI(value));
            _printer.printText('"');
          }
 else           if (HTMLdtd.isBoolean(tagName,name))           _printer.printText(name);
 else {
            _printer.printText(name);
            _printer.printText("=\"");
            printEscaped(value);
            _printer.printText('"');
          }
        }
      }
    }
  }
  if (HTMLdtd.isPreserveSpace(tagName))   preserveSpace=true;
  if (elem.hasChildNodes() || !HTMLdtd.isEmptyTag(tagName)) {
    state=enterElementState(null,null,tagName,preserveSpace);
    if (tagName.equalsIgnoreCase("A") || tagName.equalsIgnoreCase("TD")) {
      state.empty=false;
      _printer.printText('>');
    }
    if (tagName.equalsIgnoreCase("SCRIPT") || tagName.equalsIgnoreCase("STYLE")) {
      if (_xhtml) {
        state.doCData=true;
      }
 else {
        state.unescaped=true;
      }
    }
    child=elem.getFirstChild();
    while (child != null) {
      serializeNode(child);
      child=child.getNextSibling();
    }
    endElementIO(null,null,tagName);
  }
 else {
    _printer.unindent();
    if (_xhtml)     _printer.printText(" />");
 else     _printer.printText('>');
    state.afterElement=true;
    state.empty=false;
    if (isDocumentState())     _printer.flush();
  }
}
-->
61.0 / 2499 = 0.024409763905562223