/** 
 * @throws ClassCastException {@inheritDoc}
 * @throws NullPointerException if the specified key is null
 */
public K lowerKey(K key){
  Node<K,V> n=findNear(key,LT);
  return (n == null) ? null : n.key;
}

/** 
 * @param key the key
 * @throws ClassCastException {@inheritDoc}
 * @throws NullPointerException if the specified key is null
 */
public K higherKey(K key){
  Node<K,V> n=findNear(key,GT);
  return (n == null) ? null : n.key;
}

-->
void lowerKey_higherKey(K key,K key,int combFlag){
  if (combFlag == 1) {
    Node<K,V> n=findNear(key,LT);
  }
 else {
    Node<K,V> n=findNear(key,GT);
  }
  return (n == null) ? null : n.key;
}
