/** 
 * Given a node handle, find the owning document node.  This has the exact same semantics as the DOM Document method of the same name, in that if the nodeHandle is a document node, it will return NULL. <p>%REVIEW% Since this is DOM-specific, it may belong at the DOM binding layer. Included here as a convenience function and to aid porting of DOM code to DTM.</p>
 * @param nodeHandle the id of the node.
 * @return int Node handle of owning document, or NULL if the nodeHandle isa document.
 */
public int getOwnerDocument(int nodeHandle){
  if ((nodeHandle & NODEHANDLE_MASK) == 0)   return NULL;
  return (nodeHandle & DOCHANDLE_MASK);
}

/** 
 * Given a node handle, find the owning document node.  This has the DTM semantics; a Document node is its own owner. <p>%REVIEW% Since this is DOM-specific, it may belong at the DOM binding layer. Included here as a convenience function and to aid porting of DOM code to DTM.</p>
 * @param nodeHandle the id of the node.
 * @return int Node handle of owning document, or NULL if the nodeHandle isa document.
 */
public int getDocumentRoot(int nodeHandle){
  if ((nodeHandle & NODEHANDLE_MASK) == 0)   return NULL;
  return (nodeHandle & DOCHANDLE_MASK);
}

-->
void getOwnerDocument_getDocumentRoot(int nodeHandle,int nodeHandle,int combFlag){
  if (combFlag == 1) {
    if ((nodeHandle & NODEHANDLE_MASK) == 0)     return NULL;
  }
 else {
    if ((nodeHandle & NODEHANDLE_MASK) == 0)     return NULL;
  }
  return (nodeHandle & DOCHANDLE_MASK);
}
