/** 
 * Method isReferenceToObject This returns true if the <CODE>Type</CODE> attribute of the <CODE>Refernce</CODE> element points to a <CODE>#Object</CODE> element
 * @return true if the Reference type indicates that this Reference points to an <code>Object</code>
 */
public boolean typeIsReferenceToObject(){
  if (Reference.OBJECT_URI.equals(this.getType())) {
    return true;
  }
  return false;
}

/** 
 * Method isReferenceToManifest This returns true if the <CODE>Type</CODE> attribute of the <CODE>Refernce</CODE> element points to a <CODE>#Manifest</CODE> element
 * @return true if the Reference type indicates that this Reference points to a {@link Manifest}
 */
public boolean typeIsReferenceToManifest(){
  if (Reference.MANIFEST_URI.equals(this.getType())) {
    return true;
  }
  return false;
}

-->
void typeIsReferenceToObject_typeIsReferenceToManifest(int combFlag){
  if (combFlag == 1) {
    if (Reference.OBJECT_URI.equals(this.getType())) {
      return true;
    }
  }
 else {
    if (Reference.MANIFEST_URI.equals(this.getType())) {
      return true;
    }
  }
  return false;
}
