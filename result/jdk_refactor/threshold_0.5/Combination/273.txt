/** 
 * Return the key used to identify the element type in arrays - e.g. "Z" for boolean, "C" for char etc...
 * @param elementClassName the wrapper class name of the arrayelement ("Boolean",  "Character", etc...)
 * @return the key corresponding to the given type ("Z", "C", etc...)return null if the given elementClassName is not a primitive wrapper class name.
 */
static String getPrimitiveTypeKey(String elementClassName){
  for (  Object[] typeDescr : PRIMITIVE_ARRAY_TYPES) {
    if (elementClassName.equals(typeDescr[PRIMITIVE_WRAPPER_NAME_INDEX]))     return (String)typeDescr[PRIMITIVE_TYPE_KEY_INDEX];
  }
  return null;
}

/** 
 * Return the primitive type name corresponding to the given wrapper class. e.g. "boolean" for "Boolean", "char" for "Character" etc...
 * @param elementClassName the type of the array element ("Boolean","Character", etc...)
 * @return the primitive type name corresponding to the given wrapper class("boolean", "char", etc...) return null if the given elementClassName is not a primitive wrapper type name.
 */
static String getPrimitiveTypeName(String elementClassName){
  for (  Object[] typeDescr : PRIMITIVE_ARRAY_TYPES) {
    if (elementClassName.equals(typeDescr[PRIMITIVE_WRAPPER_NAME_INDEX]))     return (String)typeDescr[PRIMITIVE_TYPE_NAME_INDEX];
  }
  return null;
}

-->
void getPrimitiveTypeKey_getPrimitiveTypeName(String elementClassName,String elementClassName,int combFlag){
  if (combFlag == 1) {
    for (    Object[] typeDescr : PRIMITIVE_ARRAY_TYPES) {
      if (elementClassName.equals(typeDescr[PRIMITIVE_WRAPPER_NAME_INDEX]))       return (String)typeDescr[PRIMITIVE_TYPE_KEY_INDEX];
    }
  }
 else {
    for (    Object[] typeDescr : PRIMITIVE_ARRAY_TYPES) {
      if (elementClassName.equals(typeDescr[PRIMITIVE_WRAPPER_NAME_INDEX]))       return (String)typeDescr[PRIMITIVE_TYPE_NAME_INDEX];
    }
  }
  return null;
}
