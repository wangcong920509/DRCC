/** 
 * Removes all components from this list and sets its size to zero. <blockquote> <b>Note:</b> Although this method is not deprecated, the preferred method to use is <code>clear</code>, which implements the <code>List</code> interface defined in the 1.2 Collections framework. </blockquote>
 * @see #clear()
 * @see Vector#removeAllElements()
 */
public void removeAllElements(){
  int index1=delegate.size() - 1;
  delegate.removeAllElements();
  if (index1 >= 0) {
    fireIntervalRemoved(this,0,index1);
  }
}

/** 
 * Removes all of the elements from this list.  The list will be empty after this call returns (unless it throws an exception).
 */
public void clear(){
  int index1=delegate.size() - 1;
  delegate.removeAllElements();
  if (index1 >= 0) {
    fireIntervalRemoved(this,0,index1);
  }
}

-->
void removeAllElements_clear(int combFlag){
  if (combFlag == 1) {
    int index1=delegate.size() - 1;
  }
 else {
    int index1=delegate.size() - 1;
  }
  delegate.removeAllElements();
  if (index1 >= 0) {
    fireIntervalRemoved(this,0,index1);
  }
}
