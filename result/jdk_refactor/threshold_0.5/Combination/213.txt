private void emitLoadInsn(char type,int index){
  int opcode;
switch (type) {
case 'I':
    opcode=Opcodes.ILOAD;
  break;
case 'J':
opcode=Opcodes.LLOAD;
break;
case 'F':
opcode=Opcodes.FLOAD;
break;
case 'D':
opcode=Opcodes.DLOAD;
break;
case 'L':
opcode=Opcodes.ALOAD;
break;
default :
throw new InternalError("unknown type: " + type);
}
mv.visitVarInsn(opcode,localsMap[index]);
}

private void emitStoreInsn(char type,int index){
  int opcode;
switch (type) {
case 'I':
    opcode=Opcodes.ISTORE;
  break;
case 'J':
opcode=Opcodes.LSTORE;
break;
case 'F':
opcode=Opcodes.FSTORE;
break;
case 'D':
opcode=Opcodes.DSTORE;
break;
case 'L':
opcode=Opcodes.ASTORE;
break;
default :
throw new InternalError("unknown type: " + type);
}
mv.visitVarInsn(opcode,localsMap[index]);
}

-->
void emitLoadInsn_emitStoreInsn(char type,int index,char type,int index,int combFlag){
  if (combFlag == 1) {
    int opcode;
switch (type) {
case 'I':
      opcode=Opcodes.ILOAD;
    break;
case 'J':
  opcode=Opcodes.LLOAD;
break;
case 'F':
opcode=Opcodes.FLOAD;
break;
case 'D':
opcode=Opcodes.DLOAD;
break;
case 'L':
opcode=Opcodes.ALOAD;
break;
default :
throw new InternalError("unknown type: " + type);
}
}
 else {
int opcode;
switch (type) {
case 'I':
opcode=Opcodes.ISTORE;
break;
case 'J':
opcode=Opcodes.LSTORE;
break;
case 'F':
opcode=Opcodes.FSTORE;
break;
case 'D':
opcode=Opcodes.DSTORE;
break;
case 'L':
opcode=Opcodes.ASTORE;
break;
default :
throw new InternalError("unknown type: " + type);
}
}
mv.visitVarInsn(opcode,localsMap[index]);
}
