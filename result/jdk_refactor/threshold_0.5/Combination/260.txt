/** 
 * Returns <code>true</code> if it is possible to replace the stream metadata already present in the output. <p> The default implementation throws an <code>IllegalStateException</code> if the output is <code>null</code>, and otherwise returns <code>false</code>.
 * @return <code>true</code> if replacement of stream metadata isallowed.
 * @exception IllegalStateException if the output has notbeen set.
 * @exception IOException if an I/O error occurs during the query.
 */
public boolean canReplaceStreamMetadata() throws IOException {
  if (getOutput() == null) {
    throw new IllegalStateException("getOutput() == null!");
  }
  return false;
}

/** 
 * Returns <code>true</code> if the writer supports the writing of a complete image stream consisting of a single image with undefined pixel values and associated metadata and thumbnails to the output.  The pixel values may be defined by future calls to the <code>replacePixels</code> methods.  If the output is an <code>ImageOutputStream</code>, its existing contents prior to the current seek position are not affected, and need not be readable or writable. <p> The default implementation throws an <code>IllegalStateException</code> if the output is <code>null</code>, and otherwise returns <code>false</code>.
 * @return <code>true</code> if the writing of complete imagestream with contents to be defined later is supported.
 * @exception IllegalStateException if the output has not beenset.
 * @exception IOException if an I/O error occurs during thequery.
 */
public boolean canWriteEmpty() throws IOException {
  if (getOutput() == null) {
    throw new IllegalStateException("getOutput() == null!");
  }
  return false;
}

-->
void canReplaceStreamMetadata_canWriteEmpty(int combFlag){
  if (combFlag == 1) {
    if (getOutput() == null) {
      throw new IllegalStateException("getOutput() == null!");
    }
  }
 else {
    if (getOutput() == null) {
      throw new IllegalStateException("getOutput() == null!");
    }
  }
  return false;
}
