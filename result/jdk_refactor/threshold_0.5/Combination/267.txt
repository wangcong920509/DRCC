/** 
 * Returns the alignment along the x axis.  This specifies how the component would like to be aligned relative to other components.  The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.
 * @param parent the {@code Container} hosting this {@code LayoutManager}
 * @throws IllegalArgumentException if {@code parent} is notthe same  {@code Container} that this was created with
 * @return the alignment; this implementation returns {@code .5}
 */
public float getLayoutAlignmentX(Container parent){
  checkParent(parent);
  return .5f;
}

/** 
 * Returns the alignment along the y axis.  This specifies how the component would like to be aligned relative to other components.  The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.
 * @param parent the {@code Container} hosting this {@code LayoutManager}
 * @throws IllegalArgumentException if {@code parent} is notthe same  {@code Container} that this was created with
 * @return alignment; this implementation returns {@code .5}
 */
public float getLayoutAlignmentY(Container parent){
  checkParent(parent);
  return .5f;
}

-->
void getLayoutAlignmentX_getLayoutAlignmentY(Container parent,Container parent,int combFlag){
  if (combFlag == 1) {
    checkParent(parent);
  }
 else {
    checkParent(parent);
  }
  return .5f;
}
