protected boolean initializeComponentsFromTypeCode(){
  try {
    any=DynAnyUtil.createDefaultAnyOfType(any.type(),orb);
    components=new DynAny[]{DynAnyUtil.createMostDerivedDynAny(any,orb,false)};
  }
 catch (  InconsistentTypeCode ictc) {
    return false;
  }
  return true;
}

protected boolean initializeAnyFromComponents(){
  any=getAny(components[0]);
  return true;
}

-->
void initializeComponentsFromTypeCode_initializeAnyFromComponents(int combFlag){
  if (combFlag == 1) {
    try {
      any=DynAnyUtil.createDefaultAnyOfType(any.type(),orb);
      components=new DynAny[]{DynAnyUtil.createMostDerivedDynAny(any,orb,false)};
    }
 catch (    InconsistentTypeCode ictc) {
      return false;
    }
  }
 else {
    any=getAny(components[0]);
  }
  return true;
}
