public XSAttributeUse getAttributeUse(String namespace,String name){
  for (int i=0; i < fAttrUseNum; i++) {
    if ((fAttributeUses[i].fAttrDecl.fTargetNamespace == namespace) && (fAttributeUses[i].fAttrDecl.fName == name))     return fAttributeUses[i];
  }
  return null;
}

public XSAttributeUse getAttributeUseNoProhibited(String namespace,String name){
  for (int i=0; i < fAttrUseNum; i++) {
    if ((fAttributeUses[i].fAttrDecl.fTargetNamespace == namespace) && (fAttributeUses[i].fAttrDecl.fName == name) && (fAttributeUses[i].fUse != SchemaSymbols.USE_PROHIBITED))     return fAttributeUses[i];
  }
  return null;
}

-->
void getAttributeUse_getAttributeUseNoProhibited(String namespace,String name,String namespace,String name,int combFlag){
  if (combFlag == 1) {
    for (int i=0; i < fAttrUseNum; i++) {
      if ((fAttributeUses[i].fAttrDecl.fTargetNamespace == namespace) && (fAttributeUses[i].fAttrDecl.fName == name))       return fAttributeUses[i];
    }
  }
 else {
    for (int i=0; i < fAttrUseNum; i++) {
      if ((fAttributeUses[i].fAttrDecl.fTargetNamespace == namespace) && (fAttributeUses[i].fAttrDecl.fName == name) && (fAttributeUses[i].fUse != SchemaSymbols.USE_PROHIBITED))       return fAttributeUses[i];
    }
  }
  return null;
}
