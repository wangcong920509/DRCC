/** 
 * Translates the string representation of a  {@code BigDecimal}into a  {@code BigDecimal}, accepting the same strings as the {@link #BigDecimal(String)} constructor, with roundingaccording to the context settings.
 * @param val string representation of a {@code BigDecimal}.
 * @param mc the context to use.
 * @throws ArithmeticException if the result is inexact but therounding mode is  {@code UNNECESSARY}.
 * @throws NumberFormatException if {@code val} is not a validrepresentation of a BigDecimal.
 * @since  1.5
 */
public BigDecimal(String val,MathContext mc){
  this(val.toCharArray(),0,val.length());
  if (mc.precision > 0)   roundThis(mc);
}
/** 
 * Translates a  {@code long} into a {@code BigDecimal}, with rounding according to the context settings.  The scale of the {@code BigDecimal}, before any rounding, is zero.
 * @param val {@code long} value to be converted to {@code BigDecimal}.
 * @param mc the context to use.
 * @throws ArithmeticException if the result is inexact but therounding mode is  {@code UNNECESSARY}.
 * @since  1.5
 */
public BigDecimal(long val,MathContext mc){
  this(val);
  if (mc.precision > 0)   roundThis(mc);
}
