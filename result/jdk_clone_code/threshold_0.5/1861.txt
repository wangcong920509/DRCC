/** 
 * Returns a new string that is a substring of this string. The substring begins with the character at the specified index and extends to the end of this string. <p> Examples: <blockquote><pre> "unhappy".substring(2) returns "happy" "Harbison".substring(3) returns "bison" "emptiness".substring(9) returns "" (an empty string) </pre></blockquote>
 * @param beginIndex   the beginning index, inclusive.
 * @return     the specified substring.
 * @exception IndexOutOfBoundsException  if<code>beginIndex</code> is negative or larger than the length of this <code>String</code> object.
 */
public XMLString substring(int beginIndex){
  int len=m_length - beginIndex;
  if (len <= 0)   return XString.EMPTYSTRING;
 else {
    int start=m_start + beginIndex;
    return new XStringForFSB(fsb(),start,len);
  }
}
/** 
 * Returns a new string that is a substring of this string. The substring begins at the specified <code>beginIndex</code> and extends to the character at index <code>endIndex - 1</code>. Thus the length of the substring is <code>endIndex-beginIndex</code>.
 * @param beginIndex   the beginning index, inclusive.
 * @param endIndex     the ending index, exclusive.
 * @return     the specified substring.
 * @exception IndexOutOfBoundsException  if the<code>beginIndex</code> is negative, or <code>endIndex</code> is larger than the length of this <code>String</code> object, or <code>beginIndex</code> is larger than <code>endIndex</code>.
 */
public XMLString substring(int beginIndex,int endIndex){
  int len=endIndex - beginIndex;
  if (len > m_length)   len=m_length;
  if (len <= 0)   return XString.EMPTYSTRING;
 else {
    int start=m_start + beginIndex;
    return new XStringForFSB(fsb(),start,len);
  }
}
