/** 
 * Formats a double to produce a string.
 * @param number    The double to format
 * @param result    where the text is to be appended
 * @param fieldPosition    On input: an alignment field, if desired.On output: the offsets of the alignment field.
 * @exception ArithmeticException if rounding is needed with roundingmode being set to RoundingMode.UNNECESSARY
 * @return The formatted number string
 * @see java.text.FieldPosition
 */
public StringBuffer format(double number,StringBuffer result,FieldPosition fieldPosition){
  fieldPosition.setBeginIndex(0);
  fieldPosition.setEndIndex(0);
  return format(number,result,fieldPosition.getFieldDelegate());
}
/** 
 * Format a long to produce a string.
 * @param number    The long to format
 * @param result    where the text is to be appended
 * @param fieldPosition    On input: an alignment field, if desired.On output: the offsets of the alignment field.
 * @exception ArithmeticException if rounding is needed with roundingmode being set to RoundingMode.UNNECESSARY
 * @return The formatted number string
 * @see java.text.FieldPosition
 */
public StringBuffer format(long number,StringBuffer result,FieldPosition fieldPosition){
  fieldPosition.setBeginIndex(0);
  fieldPosition.setEndIndex(0);
  return format(number,result,fieldPosition.getFieldDelegate());
}
