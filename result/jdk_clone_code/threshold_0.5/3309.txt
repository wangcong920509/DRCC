/** 
 * Releases in exclusive mode.  Implemented by unblocking one or more threads if  {@link #tryRelease} returns true.This method can be used to implement method  {@link Lock#unlock}.
 * @param arg the release argument.  This value is conveyed to{@link #tryRelease} but is otherwise uninterpreted andcan represent anything you like.
 * @return the value returned from {@link #tryRelease}
 */
public final boolean release(long arg){
  if (tryRelease(arg)) {
    Node h=head;
    if (h != null && h.waitStatus != 0)     unparkSuccessor(h);
    return true;
  }
  return false;
}
/** 
 * Releases in shared mode.  Implemented by unblocking one or more threads if  {@link #tryReleaseShared} returns true.
 * @param arg the release argument.  This value is conveyed to{@link #tryReleaseShared} but is otherwise uninterpretedand can represent anything you like.
 * @return the value returned from {@link #tryReleaseShared}
 */
public final boolean releaseShared(long arg){
  if (tryReleaseShared(arg)) {
    doReleaseShared();
    return true;
  }
  return false;
}
