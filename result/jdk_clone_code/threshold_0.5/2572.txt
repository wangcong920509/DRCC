public ByteBuffer put(ByteBuffer src){
  if (src instanceof DirectByteBuffer) {
    if (src == this)     throw new IllegalArgumentException();
    DirectByteBuffer sb=(DirectByteBuffer)src;
    int spos=sb.position();
    int slim=sb.limit();
    assert(spos <= slim);
    int srem=(spos <= slim ? slim - spos : 0);
    int pos=position();
    int lim=limit();
    assert(pos <= lim);
    int rem=(pos <= lim ? lim - pos : 0);
    if (srem > rem)     throw new BufferOverflowException();
    unsafe.copyMemory(sb.ix(spos),ix(pos),srem << 0);
    sb.position(spos + srem);
    position(pos + srem);
  }
 else   if (src.hb != null) {
    int spos=src.position();
    int slim=src.limit();
    assert(spos <= slim);
    int srem=(spos <= slim ? slim - spos : 0);
    put(src.hb,src.offset + spos,srem);
    src.position(spos + srem);
  }
 else {
    super.put(src);
  }
  return this;
}
public ByteBuffer put(byte[] src,int offset,int length){
  if ((length << 0) > Bits.JNI_COPY_FROM_ARRAY_THRESHOLD) {
    checkBounds(offset,length,src.length);
    int pos=position();
    int lim=limit();
    assert(pos <= lim);
    int rem=(pos <= lim ? lim - pos : 0);
    if (length > rem)     throw new BufferOverflowException();
    Bits.copyFromArray(src,arrayBaseOffset,offset << 0,ix(pos),length << 0);
    position(pos + length);
  }
 else {
    super.put(src,offset,length);
  }
  return this;
}
