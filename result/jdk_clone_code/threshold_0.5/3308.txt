/** 
 * Return the primitive type name corresponding to the given wrapper class. e.g. "boolean" for "Boolean", "char" for "Character" etc...
 * @param elementClassName the type of the array element ("Boolean","Character", etc...)
 * @return the primitive type name corresponding to the given wrapper class("boolean", "char", etc...) return null if the given elementClassName is not a primitive wrapper type name.
 */
static String getPrimitiveTypeName(String elementClassName){
  for (  Object[] typeDescr : PRIMITIVE_ARRAY_TYPES) {
    if (elementClassName.equals(typeDescr[PRIMITIVE_WRAPPER_NAME_INDEX]))     return (String)typeDescr[PRIMITIVE_TYPE_NAME_INDEX];
  }
  return null;
}
/** 
 * Return the primitive open type corresponding to the given primitive type. e.g. SimpleType.BOOLEAN for "boolean", SimpleType.CHARACTER for "char", etc...
 * @param primitiveTypeName the primitive type of the array element ("boolean","char", etc...)
 * @return the OpenType corresponding to the given primitive type name(SimpleType.BOOLEAN, SimpleType.CHARACTER, etc...) return null if the given elementClassName is not a primitive type name.
 */
static SimpleType<?> getPrimitiveOpenType(String primitiveTypeName){
  for (  Object[] typeDescr : PRIMITIVE_ARRAY_TYPES) {
    if (primitiveTypeName.equals(typeDescr[PRIMITIVE_TYPE_NAME_INDEX]))     return (SimpleType<?>)typeDescr[PRIMITIVE_OPEN_TYPE_INDEX];
  }
  return null;
}
