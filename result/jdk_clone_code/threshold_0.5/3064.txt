/** 
 * Constructs a  <code>SQLWarning</code> object with a given <code>reason</code>, <code>SQLState</code>  and <code>vendorCode</code>. The <code>cause</code> is not initialized, and may subsequently be initialized by a call to the {@link Throwable#initCause(java.lang.Throwable)} method.<p>
 * @param reason a description of the warning
 * @param SQLState an XOPEN or SQL:2003 code identifying the warning
 * @param vendorCode a database vendor-specific warning code
 */
public SQLWarning(String reason,String SQLState,int vendorCode){
  super(reason,SQLState,vendorCode);
  DriverManager.println("SQLWarning: reason(" + reason + ") SQLState("+ SQLState+ ") vendor code("+ vendorCode+ ")");
}
/** 
 * Constructs a<code>SQLWarning</code> object with a given <code>reason</code>, <code>SQLState</code>, <code>vendorCode</code> and  <code>cause</code>. <p>
 * @param reason a description of the warning
 * @param SQLState an XOPEN or SQL:2003 code identifying the warning
 * @param vendorCode a database vendor-specific warning code
 * @param cause the underlying reason for this <code>SQLWarning</code> (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicatingthe cause is non-existent or unknown.
 */
public SQLWarning(String reason,String SQLState,int vendorCode,Throwable cause){
  super(reason,SQLState,vendorCode,cause);
  DriverManager.println("SQLWarning: reason(" + reason + ") SQLState("+ SQLState+ ") vendor code("+ vendorCode+ ")");
}
