/** 
 * Constructs a ModelMBeanOperationInfo object with a default descriptor. The  {@link Descriptor} of the constructedobject will include fields contributed by any annotations on the  {@code Method} object that contain the {@link DescriptorKey} meta-annotation.
 * @param operationMethod The java.lang.reflect.Method objectdescribing the MBean operation.
 * @param description A human readable description of the operation.
 */
public ModelMBeanOperationInfo(String description,Method operationMethod){
  super(description,operationMethod);
  if (MODELMBEAN_LOGGER.isLoggable(Level.FINER)) {
    MODELMBEAN_LOGGER.logp(Level.FINER,ModelMBeanOperationInfo.class.getName(),"ModelMBeanOperationInfo(String,Method)","Entry");
  }
  operationDescriptor=validDescriptor(null);
}
/** 
 * Constructs a ModelMBeanOperationInfo object with a default descriptor.
 * @param name The name of the method.
 * @param description A human readable description of the operation.
 * @param signature MBeanParameterInfo objects describing theparameters(arguments) of the method.
 * @param type The type of the method's return value.
 * @param impact The impact of the method, one of INFO, ACTION,ACTION_INFO, UNKNOWN.
 */
public ModelMBeanOperationInfo(String name,String description,MBeanParameterInfo[] signature,String type,int impact){
  super(name,description,signature,type,impact);
  if (MODELMBEAN_LOGGER.isLoggable(Level.FINER)) {
    MODELMBEAN_LOGGER.logp(Level.FINER,ModelMBeanOperationInfo.class.getName(),"ModelMBeanOperationInfo(" + "String,String,MBeanParameterInfo[],String,int)","Entry");
  }
  operationDescriptor=validDescriptor(null);
}
