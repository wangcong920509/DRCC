/** 
 * Retrieves an <code>XSObject</code> specified by local name and namespace URI. <br>Per XML Namespaces, applications must use the value <code>null</code> as the <code>namespace</code> parameter for methods if they wish to specify no namespace.
 * @param namespace The namespace URI of the <code>XSObject</code> toretrieve, or <code>null</code> if the <code>XSObject</code> has no namespace.
 * @param localName The local name of the <code>XSObject</code> toretrieve.
 * @return A <code>XSObject</code> (of any type) with the specified localname and namespace URI, or <code>null</code> if they do not identify any object in this map.
 */
public XSObject itemByName(String namespace,String localName){
  for (int i=0; i < fNSNum; i++) {
    if (isEqual(namespace,fNamespaces[i])) {
      if (fMaps != null) {
        return (XSObject)fMaps[i].get(localName);
      }
      XSObject ret;
      for (int j=0; j < fLength; j++) {
        ret=fArray[j];
        if (ret.getName().equals(localName)) {
          return ret;
        }
      }
      return null;
    }
  }
  return null;
}
public Object get(Object key){
  if (key instanceof QName) {
    final QName name=(QName)key;
    String namespaceURI=name.getNamespaceURI();
    if (XMLConstants.NULL_NS_URI.equals(namespaceURI)) {
      namespaceURI=null;
    }
    String localPart=name.getLocalPart();
    return itemByName(namespaceURI,localPart);
  }
  return null;
}
