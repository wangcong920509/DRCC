/** 
 * Constructs either a cyclic or acyclic <code>GradientPaint</code> object depending on the <code>boolean</code> parameter.
 * @param x1 x coordinate of the first specified<code>Point</code> in user space
 * @param y1 y coordinate of the first specified<code>Point</code> in user space
 * @param color1 <code>Color</code> at the first specified<code>Point</code>
 * @param x2 x coordinate of the second specified<code>Point</code> in user space
 * @param y2 y coordinate of the second specified<code>Point</code> in user space
 * @param color2 <code>Color</code> at the second specified<code>Point</code>
 * @param cyclic <code>true</code> if the gradient pattern should cyclerepeatedly between the two colors; <code>false</code> otherwise
 */
public GradientPaint(float x1,float y1,Color color1,float x2,float y2,Color color2,boolean cyclic){
  this(x1,y1,color1,x2,y2,color2);
  this.cyclic=cyclic;
}
/** 
 * Constructs either a cyclic or acyclic <code>GradientPaint</code> object depending on the <code>boolean</code> parameter.
 * @param pt1 the first specified <code>Point</code>in user space
 * @param color1 <code>Color</code> at the first specified<code>Point</code>
 * @param pt2 the second specified <code>Point</code>in user space
 * @param color2 <code>Color</code> at the second specified<code>Point</code>
 * @param cyclic <code>true</code> if the gradient pattern should cyclerepeatedly between the two colors; <code>false</code> otherwise
 * @throws NullPointerException if either one of colors or pointsis null
 */
@ConstructorProperties({"point1","color1","point2","color2","cyclic"}) public GradientPaint(Point2D pt1,Color color1,Point2D pt2,Color color2,boolean cyclic){
  this(pt1,color1,pt2,color2);
  this.cyclic=cyclic;
}
