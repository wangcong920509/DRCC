/** 
 * Sets the language.  If <code>language</code> is the empty string or null, the language in this <code>Builder</code> is removed.  Otherwise, the language must be <a href="./Locale.html#def_language">well-formed</a> or an exception is thrown. <p>The typical language value is a two or three-letter language code as defined in ISO639.
 * @param language the language
 * @return This builder.
 * @throws IllformedLocaleException if <code>language</code> is ill-formed
 */
public Builder setLanguage(String language){
  try {
    localeBuilder.setLanguage(language);
  }
 catch (  LocaleSyntaxException e) {
    throw new IllformedLocaleException(e.getMessage(),e.getErrorIndex());
  }
  return this;
}
/** 
 * Sets the region.  If region is null or the empty string, the region in this <code>Builder</code> is removed.  Otherwise, the region must be <a href="./Locale.html#def_region">well-formed</a> or an exception is thrown. <p>The typical region value is a two-letter ISO 3166 code or a three-digit UN M.49 area code. <p>The country value in the <code>Locale</code> created by the <code>Builder</code> is always normalized to upper case.
 * @param region the region
 * @return This builder.
 * @throws IllformedLocaleException if <code>region</code> is ill-formed
 */
public Builder setRegion(String region){
  try {
    localeBuilder.setRegion(region);
  }
 catch (  LocaleSyntaxException e) {
    throw new IllformedLocaleException(e.getMessage(),e.getErrorIndex());
  }
  return this;
}
