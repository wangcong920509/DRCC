/** 
 * Constructs a ModelMBeanConstructorInfo object with a default descriptor.  The  {@link Descriptor} of the constructedobject will include fields contributed by any annotations on the  {@code Constructor} object that contain the {@link DescriptorKey} meta-annotation.
 * @param description A human readable description of the constructor.
 * @param constructorMethod The java.lang.reflect.Constructor objectdescribing the MBean constructor.
 */
public ModelMBeanConstructorInfo(String description,Constructor<?> constructorMethod){
  super(description,constructorMethod);
  if (MODELMBEAN_LOGGER.isLoggable(Level.FINER)) {
    MODELMBEAN_LOGGER.logp(Level.FINER,ModelMBeanConstructorInfo.class.getName(),"ModelMBeanConstructorInfo(String,Constructor)","Entry");
  }
  consDescriptor=validDescriptor(null);
}
/** 
 * Constructs a ModelMBeanConstructorInfo object with a default descriptor.
 * @param name The name of the constructor.
 * @param description A human readable description of the constructor.
 * @param signature MBeanParameterInfo object array describing the parameters(arguments) of the constructor.
 */
public ModelMBeanConstructorInfo(String name,String description,MBeanParameterInfo[] signature){
  super(name,description,signature);
  if (MODELMBEAN_LOGGER.isLoggable(Level.FINER)) {
    MODELMBEAN_LOGGER.logp(Level.FINER,ModelMBeanConstructorInfo.class.getName(),"ModelMBeanConstructorInfo(" + "String,String,MBeanParameterInfo[])","Entry");
  }
  consDescriptor=validDescriptor(null);
}
