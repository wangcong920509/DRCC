/** 
 * Rotates the scroll wheel on wheel-equipped mice.
 * @param wheelAmt  number of "notches" to move the mouse wheelNegative values indicate movement up/away from the user, positive values indicate movement down/towards the user.
 * @since 1.4
 */
public synchronized void mouseWheel(int wheelAmt){
  peer.mouseWheel(wheelAmt);
  afterEvent();
}
/** 
 * Releases a given key. <p> Key codes that have more than one physical key associated with them (e.g. <code>KeyEvent.VK_SHIFT</code> could mean either the left or right shift key) will map to the left key.
 * @param keycode Key to release (e.g. <code>KeyEvent.VK_A</code>)
 * @throws IllegalArgumentException if <code>keycode</code> is not avalid key
 * @see #keyPress(int)
 * @see java.awt.event.KeyEvent
 */
public synchronized void keyRelease(int keycode){
  checkKeycodeArgument(keycode);
  peer.keyRelease(keycode);
  afterEvent();
}
