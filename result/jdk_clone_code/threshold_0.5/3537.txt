/** 
 * Sets the designated parameter to the given <code>java.lang.BigDecimal</code> value.  The driver converts this to an SQL <code>NUMERIC</code> value when it sends it to the database. <P> The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this <code>RowSet</code> object's command when the method <code>execute</code> is called. Methods such as <code>execute</code> and <code>populate</code> must be provided in any class that extends this class and implements one or more of the standard JSR-114 <code>RowSet</code> interfaces. <P> Note: <code>JdbcRowSet</code> does not require the <code>populate</code> method as it is undefined in this class.
 * @param parameterIndex the ordinal number of the placeholder parameterin this <code>RowSet</code> object's command that is to be set. The first parameter is 1, the second is 2, and so on; must be <code>1</code> or greater
 * @param x the parameter value
 * @throws SQLException if an error occurs or theparameter index is out of bounds
 * @see #getParams
 */
public void setBigDecimal(int parameterIndex,java.math.BigDecimal x) throws SQLException {
  checkParamIndex(parameterIndex);
  if (params == null) {
    throw new SQLException("Set initParams() before setBigDecimal");
  }
  params.put(Integer.valueOf(parameterIndex - 1),x);
}
/** 
 * Sets the designated parameter to the given <code>String</code> value.  The driver converts this to an SQL <code>VARCHAR</code> or <code>LONGVARCHAR</code> value (depending on the argument's size relative to the driver's limits on <code>VARCHAR</code> values) when it sends it to the database. <P> The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this <code>RowSet</code> object's command when the method <code>execute</code> is called. Methods such as <code>execute</code> and <code>populate</code> must be provided in any class that extends this class and implements one or more of the standard JSR-114 <code>RowSet</code> interfaces. <p> NOTE: <code>JdbcRowSet</code> does not require the <code>populate</code> method as it is undefined in this class. <p>
 * @param parameterIndex the ordinal number of the placeholder parameterin this <code>RowSet</code> object's command that is to be set. The first parameter is 1, the second is 2, and so on; must be <code>1</code> or greater
 * @param x the parameter value
 * @throws SQLException if an error occurs or theparameter index is out of bounds
 * @see #getParams
 */
public void setString(int parameterIndex,String x) throws SQLException {
  checkParamIndex(parameterIndex);
  if (params == null) {
    throw new SQLException("Set initParams() before setString");
  }
  params.put(Integer.valueOf(parameterIndex - 1),x);
}
