/** 
 * Wraps an exception thrown by an implementation method.  It returns the corresponding client-side exception.
 * @param orig the exception to wrap.
 * @return the wrapped exception.
 */
public static RemoteException wrapException(Throwable orig){
  if (utilDelegate != null) {
    return utilDelegate.wrapException(orig);
  }
  return null;
}
/** 
 * Copies or connects an object. Used by local stubs to copy an actual parameter, result object, or exception.
 * @param obj the object to copy.
 * @param orb the ORB.
 * @return the copy or connected object.
 * @exception RemoteException if the object could not be copied or connected.
 */
public static Object copyObject(Object obj,ORB orb) throws RemoteException {
  if (utilDelegate != null) {
    return utilDelegate.copyObject(obj,orb);
  }
  return null;
}
