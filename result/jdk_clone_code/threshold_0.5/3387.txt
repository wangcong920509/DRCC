private void siftUpUsingComparator(int k,E x){
  while (k > 0) {
    int parent=(k - 1) >>> 1;
    Object e=queue[parent];
    if (comparator.compare(x,(E)e) >= 0)     break;
    queue[k]=e;
    k=parent;
  }
  queue[k]=x;
}
private void siftDownUsingComparator(int k,E x){
  int half=size >>> 1;
  while (k < half) {
    int child=(k << 1) + 1;
    Object c=queue[child];
    int right=child + 1;
    if (right < size && comparator.compare((E)c,(E)queue[right]) > 0)     c=queue[child=right];
    if (comparator.compare(x,(E)c) <= 0)     break;
    queue[k]=c;
    k=child;
  }
  queue[k]=x;
}
