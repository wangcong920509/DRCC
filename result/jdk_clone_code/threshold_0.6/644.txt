/** 
 * Creates a composite name whose components consist of a prefix of the components in this composite name. Subsequent changes to this composite name does not affect the name that is returned.
 * @param posn    The 0-based index of the component at which to stop.Must be in the range [0,size()].
 * @return A composite name consisting of the components at indexes inthe range [0,posn).
 * @exception ArrayIndexOutOfBoundsException If posn is outside the specified range.
 */
public Name getPrefix(int posn){
  Enumeration comps=impl.getPrefix(posn);
  return (new CompositeName(comps));
}
/** 
 * Creates a composite name whose components consist of a suffix of the components in this composite name. Subsequent changes to this composite name does not affect the name that is returned.
 * @param posn    The 0-based index of the component at which to start.Must be in the range [0,size()].
 * @return A composite name consisting of the components at indexes inthe range [posn,size()).  If posn is equal to size(), an empty composite name is returned.
 * @exception ArrayIndexOutOfBoundsException If posn is outside the specified range.
 */
public Name getSuffix(int posn){
  Enumeration comps=impl.getSuffix(posn);
  return (new CompositeName(comps));
}
