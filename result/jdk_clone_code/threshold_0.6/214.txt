/** 
 * Constructs a new MLet for the specified URLs using the default delegation parent ClassLoader.  The URLs will be searched in the order specified for classes and resources after first searching in the parent class loader.
 * @param urls  The URLs from which to load classes and resources.
 * @param delegateToCLR  True if, when a class is not found ineither the parent ClassLoader or the URLs, the MLet should delegate to its containing MBeanServer's  {@link ClassLoaderRepository}.
 */
public MLet(URL[] urls,boolean delegateToCLR){
  super(urls);
  init(delegateToCLR);
}
/** 
 * Constructs a new MLet for the specified URLs, parent class loader, and URLStreamHandlerFactory. The parent argument will be used as the parent class loader for delegation. The factory argument will be used as the stream handler factory to obtain protocol handlers when creating new URLs.
 * @param urls  The URLs from which to load classes and resources.
 * @param parent The parent class loader for delegation.
 * @param factory  The URLStreamHandlerFactory to use when creating URLs.
 * @param delegateToCLR  True if, when a class is not found ineither the parent ClassLoader or the URLs, the MLet should delegate to its containing MBeanServer's  {@link ClassLoaderRepository}.
 */
public MLet(URL[] urls,ClassLoader parent,URLStreamHandlerFactory factory,boolean delegateToCLR){
  super(urls,parent,factory);
  init(delegateToCLR);
}
