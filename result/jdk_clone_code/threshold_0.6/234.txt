/** 
 * Constructs a search result using the result's name, its class name, its bound object, and its attributes.
 * @param name The non-null name of the search item. It is relativeto the <em>target context</em> of the search (which is named by the first parameter of the <code>search()</code> method)
 * @param className       The possibly null class name of the objectbound to <tt>name</tt>. If null, the class name of <tt>obj</tt> is returned by <tt>getClassName()</tt>. If <tt>obj</tt> is also null, <tt>getClassName()</tt> will return null.
 * @param obj  The object bound to name. Can be null.
 * @param attrs The attributes that were requested to be returned withthis search item. Cannot be null.
 * @see javax.naming.NameClassPair#setClassName
 * @see javax.naming.NameClassPair#getClassName
 */
public SearchResult(String name,String className,Object obj,Attributes attrs){
  super(name,className,obj);
  this.attrs=attrs;
}
/** 
 * Constructs a search result using the result's name, its class name, its bound object, its attributes, and whether the name is relative.
 * @param name The non-null name of the search item.
 * @param className       The possibly null class name of the objectbound to <tt>name</tt>. If null, the class name of <tt>obj</tt> is returned by <tt>getClassName()</tt>. If <tt>obj</tt> is also null, <tt>getClassName()</tt> will return null.
 * @param obj  The object bound to name. Can be null.
 * @param attrs The attributes that were requested to be returned withthis search item. Cannot be null.
 * @param isRelative true if <code>name</code> is relativeto the target context of the search (which is named by the first parameter of the <code>search()</code> method); false if <code>name</code> is a URL string.
 * @see javax.naming.NameClassPair#setClassName
 * @see javax.naming.NameClassPair#getClassName
 */
public SearchResult(String name,String className,Object obj,Attributes attrs,boolean isRelative){
  super(name,className,obj,isRelative);
  this.attrs=attrs;
}
