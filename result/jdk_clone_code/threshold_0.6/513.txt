/** 
 * Constructs a <code>Timestamp</code> object using a milliseconds time value. The integral seconds are stored in the underlying date value; the fractional seconds are stored in the <code>nanos</code> field of the <code>Timestamp</code> object.
 * @param time milliseconds since January 1, 1970, 00:00:00 GMT.A negative number is the number of milliseconds before January 1, 1970, 00:00:00 GMT.
 * @see java.util.Calendar
 */
public Timestamp(long time){
  super((time / 1000) * 1000);
  nanos=(int)((time % 1000) * 1000000);
  if (nanos < 0) {
    nanos=1000000000 + nanos;
    super.setTime(((time / 1000) - 1) * 1000);
  }
}
/** 
 * Sets this <code>Timestamp</code> object to represent a point in time that is <tt>time</tt> milliseconds after January 1, 1970 00:00:00 GMT.
 * @param time   the number of milliseconds.
 * @see #getTime
 * @see #Timestamp(long time)
 * @see java.util.Calendar
 */
public void setTime(long time){
  super.setTime((time / 1000) * 1000);
  nanos=(int)((time % 1000) * 1000000);
  if (nanos < 0) {
    nanos=1000000000 + nanos;
    super.setTime(((time / 1000) - 1) * 1000);
  }
}
