/** 
 * Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger.  The input array is assumed to be in <i>big-endian</i> byte-order: the most significant byte is in the zeroth element.
 * @param val big-endian two's-complement binary representation ofBigInteger.
 * @throws NumberFormatException {@code val} is zero bytes long.
 */
public BigInteger(byte[] val){
  if (val.length == 0)   throw new NumberFormatException("Zero length BigInteger");
  if (val[0] < 0) {
    mag=makePositive(val);
    signum=-1;
  }
 else {
    mag=stripLeadingZeroBytes(val);
    signum=(mag.length == 0 ? 0 : 1);
  }
}
/** 
 * This private constructor translates an int array containing the two's-complement binary representation of a BigInteger into a BigInteger. The input array is assumed to be in <i>big-endian</i> int-order: the most significant int is in the zeroth element.
 */
private BigInteger(int[] val){
  if (val.length == 0)   throw new NumberFormatException("Zero length BigInteger");
  if (val[0] < 0) {
    mag=makePositive(val);
    signum=-1;
  }
 else {
    mag=trustedStripLeadingZeroInts(val);
    signum=(mag.length == 0 ? 0 : 1);
  }
}
