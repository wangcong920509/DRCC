/** 
 * Returns an estimate of the number of worker threads that are not blocked waiting to join tasks or for other managed synchronization. This method may overestimate the number of running threads.
 * @return the number of worker threads
 */
public int getRunningThreadCount(){
  int r=parallelism + (int)(ctl >> AC_SHIFT);
  return (r <= 0) ? 0 : r;
}
/** 
 * Returns an estimate of the number of threads that are currently stealing or executing tasks. This method may overestimate the number of active threads.
 * @return the number of active threads
 */
public int getActiveThreadCount(){
  int r=parallelism + (int)(ctl >> AC_SHIFT) + blockedCount;
  return (r <= 0) ? 0 : r;
}
